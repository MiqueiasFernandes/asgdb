# Generated by Django 3.1.2 on 2020-10-22 18:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('db', models.CharField(blank=True, max_length=20, null=True)),
                ('link', models.CharField(blank=True, max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('replicate', models.CharField(blank=True, max_length=50, null=True)),
                ('reference', models.CharField(blank=True, max_length=500, null=True)),
                ('ontology', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.DecimalField(decimal_places=10, max_digits=19)),
                ('RPKM', models.DecimalField(decimal_places=10, max_digits=19)),
                ('note', models.CharField(max_length=50, unique=True)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.condition')),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('family', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('annotations', models.ManyToManyField(to='entity.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonomy', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('aka', models.CharField(blank=True, max_length=20, null=True)),
                ('lineage', models.CharField(blank=True, max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, upload_to='organism', verbose_name='Organism Logo')),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protein_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('family', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('sequence', models.TextField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(to='entity.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='Isoform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isoform_id', models.CharField(max_length=20, unique=True)),
                ('splicing', models.CharField(blank=True, max_length=20, null=True)),
                ('psi', models.DecimalField(decimal_places=10, max_digits=19)),
                ('annotations', models.ManyToManyField(to='entity.Annotation')),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.expression')),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.gene')),
                ('protein', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entity.protein')),
            ],
        ),
        migrations.AddField(
            model_name='gene',
            name='organism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.organism'),
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('contig', models.CharField(max_length=20)),
                ('start', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
                ('strand', models.PositiveIntegerField(choices=[(0, 'Sense'), (1, 'Anti-Sense')])),
                ('feature', models.CharField(choices=[('G', 'Gene'), ('M', 'mRNA'), ('E', 'Exon'), ('I', 'Isoform'), ('C', 'CDS')], max_length=1)),
                ('sequence', models.TextField(blank=True, null=True)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.gene')),
                ('isoform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.isoform')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=50, unique=True)),
                ('annotations', models.ManyToManyField(to='entity.Annotation')),
                ('protein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.protein')),
            ],
        ),
        migrations.AddField(
            model_name='condition',
            name='organism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entity.organism'),
        ),
    ]
